services:
  user_management:
    depends_on:
      user_management_db:
        condition: service_healthy
    container_name: user_management
    build: ./user_management/
    volumes:
      - ./user_management:/app
      - uploaded-volume:/app/mediafiles
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - transcendence
    restart: unless-stopped
  
  user_management_db:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: user_management_db
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - transcendence
    volumes:
      - user-db:/var/lib/postgresql/data
    restart: unless-stopped

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 4200:80
    restart: unless-stopped
    networks:
      - transcendence
    volumes:
      - ./authentication:/app

  redis:
    container_name: redis
    image: redis
    build: ./redis/
    networks:
      - transcendence
    restart: unless-stopped

  authentication:
    depends_on:
    - user_management
    container_name: authentication
    build: ./authentication/
    volumes:
      - ./authentication:/app
      - uploaded-volume:/app/mediafiles
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - transcendence
    restart: unless-stopped

  matchmaking:
    depends_on:
    - user_management
    container_name: matchmaking
    build: ./matchmaking/
    volumes:
      - ./matchmaking:/app
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - transcendence
    restart: unless-stopped
  
  pong:
    depends_on:
    - user_management
    container_name: pong
    build: ./pong/
    volumes:
      - ./pong:/app
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - transcendence
    restart: unless-stopped
    
networks:
  transcendence:
    name: transcendence
    driver: bridge

volumes:
  user-db:
  uploaded-volume:
